# my dot zshrc file

##########################
### OH-MY-ZSH STUFF
##########################

# Path to your oh-my-zsh installation.
export ZSH="/Users/thehackerknownasdavidgibney/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
#ZSH_THEME="bira"
ZSH_THEME="half-life"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
# DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# Caution: this setting can cause issues with multiline prompts (zsh 5.7.1 and newer seem to work)
# See https://github.com/ohmyzsh/ohmyzsh/issues/5765
COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(common-aliases jira pyenv python sublime terraform vscode git autopep8 aws)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# personal oh-my-zsh jira plugin configs
companydomain="yeeters-incorporated"
export JIRA_URL="https://$companydomain.atlassian.net"
export JIRA_NAME=thehackerknownasdavidgibney
export JIRA_PREFIX=PROJX
export JIRA_DEFAULT_ACTION=myissues
JIRA_URL="https://$companydomain.atlassian.net"
JIRA_NAME=thehackerknownasdavidgibney
JIRA_PREFIX=PROJX
JIRA_DEFAULT_ACTION=myissues

##########################
### ALIASES and BINDS
##########################

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.

alias zshconfig="vim ~/.zshrc"
alias ohmyzsh="vim ~/.oh-my-zsh"
alias tf-docker="docker container run -it --rm -v $PWD:/tf --workdir /tf hashicorp/terraform:light init"
alias docker-tf="tf-docker"
alias python="/usr/local/bin/python3"
alias bash5=/usr/local/bin/bash
alias ssh=/Users/thehackerknownasdavidgibney/scripts/ssh-ident
alias brewup="brew --version; brew update; brew upgrade; brew upgrade --cask; brew cleanup; brew --version"
#alias jq=gojq
bindkey \C-R history-incremental-search-backward


##########################
### COMMON EXPORTS
##########################

#export ARCHFLAGS="-arch x86_64"

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='vim'
else
  export EDITOR='vim'
fi

if ! [[ $(echo $AWS_PROFILE) ]]; then export AWS_PROFILE=my_aws_profile ; fi

export AWS_SDK_LOAD_CONFIG=1
export PATH=$PATH:/Users/thehackerknownasdavidgibney/Library/Python/3.9/bin:/usr/local/opt/coreutils/libexec/gnubin:/usr/local/opt/libpq/bin

# perl
PATH="/Users/thehackerknownasdavidgibney/perl5/bin${PATH:+:${PATH}}"; export PATH;
PERL5LIB="/Users/thehackerknownasdavidgibney/perl5/lib/perl5${PERL5LIB:+:${PERL5LIB}}"; export PERL5LIB;
PERL_LOCAL_LIB_ROOT="/Users/thehackerknownasdavidgibney/perl5${PERL_LOCAL_LIB_ROOT:+:${PERL_LOCAL_LIB_ROOT}}"; export PERL_LOCAL_LIB_ROOT;
PERL_MB_OPT="--install_base \"/Users/thehackerknownasdavidgibney/perl5\""; export PERL_MB_OPT;
PERL_MM_OPT="INSTALL_BASE=/Users/thehackerknownasdavidgibney/perl5"; export PERL_MM_OPT;

# go
export GOPATH=$HOME/go
export GOROOT=/usr/local/opt/go/libexec
export PATH=$PATH:$GOPATH/bin
export PATH=$PATH:$GOROOT/bin


##########################
### JAVA STUFF
##########################

export JAVA_8_HOME=$(/usr/libexec/java_home -v1.8)
#export PATH=$PATH:/usr/local/opt/openjdk@8/bin
export PATH=$PATH:/usr/local/opt/openjdk/bin
export JAVA_11_HOME=$(/usr/libexec/java_home -v11)
export CPPFLAGS="-I/usr/local/opt/openjdk/include"

alias java8='export JAVA_HOME=$JAVA_8_HOME'
alias java11='export JAVA_HOME=$JAVA_11_HOME'

# default to Java 11
java11

export GROOVY_HOME=/usr/local/opt/groovy/libexec
export PATH="$HOME/.jenv/bin:$PATH"

eval "$(jenv init -)"


##########################
### OTHER STUFF
##########################

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

# from your shell, use `gitpop` to open a tab in your browser to your current repo on github.com
function gitpop(){
    URL=$(git config --get remote.origin.url | awk -F':' '{print $2}' | sed 's/.git//g')
    open https://github.com/$URL
}

# from your shell, use `gitpopbr` to open a tab in your browser to your current repo and branch on github.com
function gitpop(){
    URL=$(git config --get remote.origin.url | awk -F':' '{print $2}' | sed 's/.git//g')
    BRANCH=$(git branch --show-current)
    open https://github.com/$URL/tree/$BRANCH
}

echo "Hello $(whoami). Remember to brew update/upgrade if it has been a while. Use the alias brewup"
